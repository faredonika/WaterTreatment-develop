@using WaterTreatment.Web.Models
@model IEnumerable < MeasurementModel >


<div class="table-responsive">
    <table class="table striped-grid">
        <thead class="report-header">
            <tr>
                <th class="col-md-6">MEASUREMENT</th>
                <th class="col-md-4">VALUE</th>
                <th class="col-md-2">COMMENTS</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var measurement in Model)
            {
                if (measurement.IsAdhoc ==false)
                {
                    <tr>
                        <td>@measurement.Name</td>
                        <td>
                            @if (!measurement.HasBounds || measurement.Type == "Value")
                            {
                                <span class="pull-left">
                                    @Html.Raw(measurement.IsApplicable ? measurement.Value + " " + measurement.Unit : "N/A")
                                </span>
                            }
                            else
                            {
                                switch (measurement.Value)
                                {
                                    case "1":
                                        <span>Light</span>
                                        break;
                                    case "2":
                                        <span>Medium</span>
                                        break;
                                    case "3":
                                        <span>Dark</span>
                                        break;
                                    default:
                                        <span>N/A</span>
                                        break;
                                }
                            }

                            @if ( measurement.IsApplicable && measurement.HasBounds)
                            {
                                <div class="pull-right oob">
                                    @{
                                        decimal? minVal, maxVal, measurementVal;
                                        var bound = string.Empty;

                                        if (!string.IsNullOrEmpty(measurement.Value))
                                        {
                                            if (measurement.Type == "Value")
                                            {
                                                minVal = measurement.MinValue;
                                                maxVal = measurement.MaxValue;
                                                measurementVal = Convert.ToDecimal(measurement.Value);
                                            }
                                            else
                                            {
                                                minVal = measurement.MinValue;
                                                maxVal = measurement.MaxValue;
                                                measurementVal = Convert.ToInt32(measurement.Value);
                                            }

                                            if (measurementVal < minVal && measurement.Range != "Maximum")
                                            {
                                                bound = "Minimum";
                                            }
                                            if (measurementVal > maxVal && measurement.Range != "Minimum")
                                            {
                                                bound = "Maximum";
                                            }
                                        }

                                        if (!string.IsNullOrEmpty(bound))
                                        {
                                            <a href="#" data-target="#modalDialog" data-toggle="modal" data-bind="click: showOOB('@Html.Raw(measurement.Id.ToString())', '@Html.Raw(bound)')"> Out of Acceptable Range</a>
                                        }
                                    }
                                </div>
                                        }
                        </td>
                        <td class="comment">
                            @if (string.IsNullOrWhiteSpace(measurement.Comment))
                            {
                                <span>No comment.</span>
                            }
                            else
                            {
                                <a href="#" data-target="#modalDialog" data-toggle="modal" data-bind="click: showComment('@Html.Raw(measurement.Id.ToString())')">@measurement.Comment</a>
                            }
                        </td>
                    </tr>
                                            }
                                        }
        </tbody>
    </table>
</div>


